version: '3.8'

services:
  seller:
    build:
      context: .
      dockerfile: docker/Dockerfile.seller
    ports:
      - "4000:4000"
    environment:
      - CONSUMER_PORT=5002
      - SELLER_URL=http://seller:4000
      - CONSUMER_URL=http://consumer:5002
    networks:
      - ueta-network
    volumes:
      - ./audit.log:/app/audit.log
    command: ["pnpm", "run", "start:seller", "--", "--with-error"]

  consumer:
    build:
      context: .
      dockerfile: docker/Dockerfile.consumer
    ports:
      - "5002:5002"
    environment:
      - CONSUMER_PORT=5002
    networks:
      - ueta-network
    command: ["pnpm", "run", "start:consumer"]
    depends_on:
      - seller

  # Classic Agent CLI and Dashboard
  agent:
    build:
      context: .
      dockerfile: docker/Dockerfile.agent
    ports:
      - "7001:7001"
    networks:
      - ueta-network
    volumes:
      - ./agent_audit.log:/app/agent_audit.log
      - ./account.json:/app/account.json
    environment:
      - SELLER_URL=http://seller:4000
      - CONSUMER_URL=http://consumer:5002
    command: ["pnpm", "run", "start:agent", "agent"]
    depends_on:
      - seller
      - consumer

  agent-dashboard:
    build:
      context: .
      dockerfile: docker/Dockerfile.agent
    ports:
      - "6001:6001"
    networks:
      - ueta-network
    volumes:
      - ./account.json:/app/account.json
    environment:
      - SELLER_URL=http://seller:4000
      - CONSUMER_URL=http://consumer:5002
    command: ["pnpm", "run", "start:agent", "dashboard"]
    depends_on:
      - seller
      - consumer
      - agent

  # New Agent Implementation with NextJS UI
  new-agent-api:
    build:
      context: ./new/agent
      dockerfile: Dockerfile.api
    ports:
      - "3001:3001"
    environment:
      - API_PORT=3001
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - SELLER_URL=http://seller:4000
      - CONSUMER_URL=http://consumer:5002
    networks:
      - ueta-network
    volumes:
      - ./new/agent/account.json:/app/src/account.json
      - ./new/agent/agent_audit.log:/app/src/agent_audit.log
      - ./new/agent/src/data/policies.json:/app/src/data/policies.json
    depends_on:
      - seller
      - consumer

  new-agent-frontend:
    build:
      context: ./new/agent
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - NEXT_PUBLIC_FRONTEND_URL=http://localhost:3000
    networks:
      - ueta-network
    depends_on:
      - new-agent-api

  prometheus:
    image: prom/prometheus:v2.37.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - ueta-network
    environment:
      - SELLER_URL=http://seller:4000
      - CONSUMER_URL=http://consumer:5002
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    depends_on:
      - seller
      - consumer
      - agent
      - agent-dashboard

  grafana:
    image: grafana/grafana:9.0.3
    ports:
      - "3100:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - grafana-data:/var/lib/grafana
    networks:
      - ueta-network
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - SELLER_URL=http://seller:4000
      - CONSUMER_URL=http://consumer:5002

networks:
  ueta-network:

volumes:
  prometheus-data:
  grafana-data:
